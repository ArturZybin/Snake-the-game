'use strict'

import {
    fieldProperties,
} from './snakeFieldProperties.js';

export {
    createNewField,
    createBarriers,
    changeScore,
    setScore,
    updateLeaderboard
};


createNewField();
setupSavedLeaderboard();


document.getElementById('settingsButton').addEventListener('click', openSettings);
document.getElementById('closeSettingsButton').addEventListener('click', closeSettings);
document.addEventListener('keydown', triggerScreenArrowClick);
document.addEventListener('keyup', untriggerScreenArrowClick);
document.getElementById('gift').addEventListener('click', takeGift);


function createNewField() {
    let field = document.getElementById('field');
    field.innerHTML = '';
    createFieldCells(field);
}


function createFieldCells(field) {
    let fieldSize = 17;
    for (let i = 0; i < fieldSize; i++) {
        let row = document.createElement('tr');
        for (let j = 0; j < fieldSize; j++) {
            let cell = document.createElement('td');
            cell.classList.add('field-cell');
            row.append(cell);
        };
        row.classList.add('field-row');
        field.append(row);
    };
}


function createBarriers() {
    let field = document.getElementById('field');
    let fieldSize = field.rows.length;
    let barriersRows = [3, 9, 13];
    let barrierLength = 10;
    
    for (let i=0; i < barriersRows.length; i++) {
        
        if (i & 1) {
            for (let cell = 0; cell < barrierLength; cell++){
                createBarrierCell(field.rows[ barriersRows[i] ].cells[cell]);
            }
        } else {
            for (let cell = fieldSize-1; cell >= fieldSize - barrierLength; cell--) {
                createBarrierCell(field.rows[ barriersRows[i] ].cells[cell]);
            }
        }
        
    }
}

function createBarrierCell(cell) {
    let barrier = document.createElement('div');
    barrier.classList.add('barrier');
    cell.append(barrier);
}


function openSettings() {
    let mainContainer = document.getElementById('mainContainer');
    let mainContainerLocker = document.getElementById('mainContainerLocker');
    let settingsContainer = document.getElementById('settingsContainer');

    mainContainer.classList.add('blured');
    mainContainerLocker.removeAttribute('hidden');
    settingsContainer.removeAttribute('hidden');

    document.addEventListener('keydown', closeSettingsByEscape)
}


function closeSettings() {
    document.dispatchEvent(new CustomEvent('settingsClosed'))

    let mainContainer = document.getElementById('mainContainer');
    let mainContainerLocker = document.getElementById('mainContainerLocker');
    let settingsContainer = document.getElementById('settingsContainer');

    mainContainer.classList.remove('blured');
    mainContainerLocker.hidden = 'true';
    settingsContainer.hidden = 'true';
    document.removeEventListener('keydown', closeSettingsByEscape);
}


function closeSettingsByEscape(event) {
    if (event.code != 'Escape') return;
    closeSettings();
}


function triggerScreenArrowClick(event) {
    // click may be generated by screen arrow
    if (!event.isTrusted) return;

    switch (event.code) {
        case 'ArrowRight':
        case 'ArrowLeft':
        case 'ArrowDown':
        case 'ArrowUp':
            document.getElementById(event.code).classList.add('active-screen-arrow');
            break;
    }
}

function untriggerScreenArrowClick(event) {
    switch (event.code) {
        case 'ArrowRight':
        case 'ArrowLeft':
        case 'ArrowDown':
        case 'ArrowUp':
            document.getElementById(event.code).classList.remove('active-screen-arrow');
            break;
    }
}


// take name from settings and score from score field
function updateLeaderboard() {
    let leaderboard = document.getElementById('leaderboard');
    let leadersList = Array.from(leaderboard.querySelectorAll('.leader'));
    let name = document.getElementById('usernameField').value;
    let score = parseInt(document.getElementById('scoreWindow').textContent);

    for (let leaderIndex=0; leaderIndex < leadersList.length; leaderIndex++) {
        let currentLeaderScore = leadersList[leaderIndex].querySelector('.leader-score').textContent;

        if (currentLeaderScore == '--||--' || parseInt(currentLeaderScore) < score) {
            // moving leaders to insert the new one
            for (let i=leadersList.length-1; i>leaderIndex; i--) {
                let previousName = leadersList[i-1].querySelector('.leader-name').textContent;
                let previousIndex = leadersList[i-1].querySelector('.leader-score').textContent;
                leadersList[i].querySelector('.leader-name').textContent = previousName;
                leadersList[i].querySelector('.leader-score').textContent = previousIndex;
            }

            leadersList[leaderIndex].querySelector('.leader-name').textContent = name;
            leadersList[leaderIndex].querySelector('.leader-score').textContent = score;
            break;
        }
    }
    
    saveLeaderboard();
}


function saveLeaderboard() {
    let leaderboard = document.getElementById('leaderboard');
    let leadersList = Array.from(leaderboard.querySelectorAll('.leader'));
    
    let leadersJSON = [];
    for (let leader of leadersList) {
        let name = leader.querySelector('.leader-name').textContent;
        let score = leader.querySelector('.leader-score').textContent;
        leadersJSON.push([name, score]);
    }
    
    localStorage.setItem('leaders', JSON.stringify(leadersJSON));
}

function setupSavedLeaderboard() {
    let leaderboard = document.getElementById('leaderboard');
    let leadersList = Array.from(leaderboard.querySelectorAll('.leader'));
    
    let leadersJSON = JSON.parse(localStorage.getItem('leaders'));
    if (!leadersJSON) return;
    for (let index = 0; index < leadersJSON.length; index++) {
        leadersList[index].querySelector('.leader-name').textContent = leadersJSON[index][0];
        leadersList[index].querySelector('.leader-score').textContent = leadersJSON[index][1];
    }
}


function changeScore(changing) {
    let scoreWindow = document.getElementById('scoreWindow');
    let score = parseInt(scoreWindow.textContent)
    score += changing;
    scoreWindow.textContent = score;
}
function setScore(score) {
    let scoreWindow = document.getElementById('scoreWindow');
    scoreWindow.textContent = score;
}



function takeGift() {
    let giftBox = document.getElementById('gift');
    let giftsList = ['img/candy.png', 'img/cake.png', 'img/bear.png'];

    let randomIndex = Math.floor(Math.random() * 3)
    giftBox.src = giftsList[randomIndex];
    giftBox.style.animation = 'none';
}